//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ParrotWingsApi.Data.Resource {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ConstStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ConstStrings() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ParrotWingsApi.Data.Resource.ConstStrings", typeof(ConstStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Электронная почта, тема и тело обращения не должны быть пустыми.
        /// </summary>
        public static string AppealDataNullError {
            get {
                return ResourceManager.GetString("AppealDataNullError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось сохранить обращение. Попробуйте позже.
        /// </summary>
        public static string AppealSaveError {
            get {
                return ResourceManager.GetString("AppealSaveError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Таблица с обращениями отсутствует.
        /// </summary>
        public static string AppealTableMissing {
            get {
                return ResourceManager.GetString("AppealTableMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Отсутствует номер карты.
        /// </summary>
        public static string CardNumberNullError {
            get {
                return ResourceManager.GetString("CardNumberNullError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка при генерации токена.
        /// </summary>
        public static string GenerateTokenError {
            get {
                return ResourceManager.GetString("GenerateTokenError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Недостаточно средств для совершения операции.
        /// </summary>
        public static string InsufficientFundsError {
            get {
                return ResourceManager.GetString("InsufficientFundsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Неверная электронная почта или пароль.
        /// </summary>
        public static string LoginDataInvalid {
            get {
                return ResourceManager.GetString("LoginDataInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Электронная почта и пароль пользователя не должны быть пустыми.
        /// </summary>
        public static string LoginDataNullError {
            get {
                return ResourceManager.GetString("LoginDataNullError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не указан получатель перевода.
        /// </summary>
        public static string RecipientNullError {
            get {
                return ResourceManager.GetString("RecipientNullError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Имя, электронная почта и пароль пользователя не должны быть пустыми.
        /// </summary>
        public static string RegisterDataNullError {
            get {
                return ResourceManager.GetString("RegisterDataNullError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось создать транзакцию. Попробуйте позже.
        /// </summary>
        public static string TransactionSaveError {
            get {
                return ResourceManager.GetString("TransactionSaveError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Таблица с транзакциями отсутствует.
        /// </summary>
        public static string TransactionTableMissing {
            get {
                return ResourceManager.GetString("TransactionTableMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 401. Неизвестная ошибка авторизации.
        /// </summary>
        public static string UnknownError401 {
            get {
                return ResourceManager.GetString("UnknownError401", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Пользователь с такой электронной почтой уже существует.
        /// </summary>
        public static string UserEmailExistsError {
            get {
                return ResourceManager.GetString("UserEmailExistsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Пользователь с такой электронной почтой не существует.
        /// </summary>
        public static string UserEmailNotExistsError {
            get {
                return ResourceManager.GetString("UserEmailNotExistsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Электронная почта пользователя не указана.
        /// </summary>
        public static string UserEmailNullError {
            get {
                return ResourceManager.GetString("UserEmailNullError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Идентификатор пользователя не указан.
        /// </summary>
        public static string UserIdNullError {
            get {
                return ResourceManager.GetString("UserIdNullError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Пользователь с таким именем уже существует.
        /// </summary>
        public static string UserNameExistsError {
            get {
                return ResourceManager.GetString("UserNameExistsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Имя пользователя не указано.
        /// </summary>
        public static string UserNameNullError {
            get {
                return ResourceManager.GetString("UserNameNullError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Пользователь не найден.
        /// </summary>
        public static string UserNotFound {
            get {
                return ResourceManager.GetString("UserNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось создать пользователя. Попробуйте позже.
        /// </summary>
        public static string UserSaveError {
            get {
                return ResourceManager.GetString("UserSaveError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Таблица с пользователями отсутствует.
        /// </summary>
        public static string UserTableMissing {
            get {
                return ResourceManager.GetString("UserTableMissing", resourceCulture);
            }
        }
    }
}
